/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.text.ParseException;
import java.text.SimpleDateFormat;


/**
 *
 * @author pat0gen0
 */
public class ClockFrame extends javax.swing.JFrame {
// to control the pm/am 
    private boolean fTextLabel;

    // to save the AlarmDialog data
    private int hour, min;
    private String msg;
    
    SimpleDateFormat sdf;
    private String alarmString, timeString;
    
    private String alarmTextMsg;

    private Thread tAlarm;
    

    public ClockFrame() {
        initComponents();
        //aÃ±adido 
        new Thread(() -> {
            while (true) {
                try {
                    Thread.sleep(500);
                } catch (InterruptedException ex) {
                    
                }
                timeString = cLabel.getText().substring(0, 5);
            }
        }).start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dAlarm = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        clockLabel1 = new back.ClockLabel();
        spHour = new javax.swing.JSpinner();
        btSend = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        spMin = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        pClock = new javax.swing.JPanel();
        cLabel = new back.ClockLabel();
        lChangeFormat = new javax.swing.JLabel();
        rbOff = new javax.swing.JRadioButton();
        rbOn = new javax.swing.JRadioButton();
        lEnun = new javax.swing.JLabel();
        lAlarm = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jPanel2.setBackground(java.awt.Color.white);
        jPanel2.setPreferredSize(new java.awt.Dimension(500, 500));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        clockLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        clockLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clockLabel1.setFont(new java.awt.Font("Roboto", 0, 48)); // NOI18N
        jPanel2.add(clockLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 188, 350, 100));

        spHour.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        spHour.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        spHour.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.add(spHour, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, 62, 52));

        btSend.setBackground(java.awt.Color.orange);
        btSend.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        btSend.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btSend.setText("SET ALARM");
        btSend.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btSend.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSend.setOpaque(true);
        btSend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btSendMouseClicked(evt);
            }
        });
        jPanel2.add(btSend, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 410, 300, 79));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/clockito.png"))); // NOI18N
        jLabel4.setToolTipText("");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, -1, 150));

        spMin.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        spMin.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        spMin.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        spMin.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.add(spMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 330, 62, 52));

        jLabel5.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Min");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 310, 40, 20));

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Hour");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 310, 60, -1));

        javax.swing.GroupLayout dAlarmLayout = new javax.swing.GroupLayout(dAlarm.getContentPane());
        dAlarm.getContentPane().setLayout(dAlarmLayout);
        dAlarmLayout.setHorizontalGroup(
            dAlarmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        dAlarmLayout.setVerticalGroup(
            dAlarmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pClock.setBackground(java.awt.Color.white);

        cLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cLabel.setFont(new java.awt.Font("Orbitron", 0, 60)); // NOI18N

        lChangeFormat.setBackground(java.awt.Color.orange);
        lChangeFormat.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        lChangeFormat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lChangeFormat.setText("12H/24H");
        lChangeFormat.setOpaque(true);
        lChangeFormat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lChangeFormatMouseClicked(evt);
            }
        });

        rbOff.setBackground(java.awt.Color.white);
        buttonGroup1.add(rbOff);
        rbOff.setSelected(true);
        rbOff.setText("Off");
        rbOff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbOffMouseClicked(evt);
            }
        });
        rbOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbOffActionPerformed(evt);
            }
        });

        rbOn.setBackground(java.awt.Color.white);
        buttonGroup1.add(rbOn);
        rbOn.setForeground(java.awt.Color.darkGray);
        rbOn.setText("On");
        rbOn.setToolTipText("");
        rbOn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbOnMouseClicked(evt);
            }
        });
        rbOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbOnActionPerformed(evt);
            }
        });

        lEnun.setBackground(java.awt.Color.white);
        lEnun.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        lEnun.setForeground(java.awt.Color.lightGray);
        lEnun.setText("Alarm will ring at:");

        lAlarm.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        lAlarm.setText("horaAlarma");
        lAlarm.setVisible(false);

        jLabel3.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        jLabel3.setText("ALARM");

        lEnun.setVisible(false);

        javax.swing.GroupLayout pClockLayout = new javax.swing.GroupLayout(pClock);
        pClock.setLayout(pClockLayout);
        pClockLayout.setHorizontalGroup(
            pClockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pClockLayout.createSequentialGroup()
                .addGroup(pClockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pClockLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(pClockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pClockLayout.createSequentialGroup()
                                .addComponent(rbOff)
                                .addGap(32, 32, 32)
                                .addComponent(lEnun)
                                .addGap(18, 18, 18)
                                .addComponent(lAlarm))
                            .addComponent(rbOn))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(pClockLayout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(lChangeFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pClockLayout.setVerticalGroup(
            pClockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pClockLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(cLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lChangeFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addGroup(pClockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pClockLayout.createSequentialGroup()
                        .addComponent(rbOn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pClockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbOff)
                            .addComponent(lEnun)
                            .addComponent(lAlarm))
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pClockLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(48, 48, 48))))
        );

        getContentPane().add(pClock, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 430));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lChangeFormatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lChangeFormatMouseClicked
        cLabel.format12_24();
        if (fTextLabel) {
            lChangeFormat.setText("12H");
            fTextLabel = !fTextLabel;
        } else {
            lChangeFormat.setText("24H");
            fTextLabel = !fTextLabel;
        }
        try {
            formatLAlarm();
        } catch (ParseException ex) {
        }
    }//GEN-LAST:event_lChangeFormatMouseClicked

    private void rbOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbOffActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbOffActionPerformed

    private void btSendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSendMouseClicked

    }//GEN-LAST:event_btSendMouseClicked

    private void rbOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbOnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbOnActionPerformed

    private void rbOnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbOnMouseClicked
        AlarmDialog da = new AlarmDialog(this, true);
        da.setVisible(true);

        lAlarm.setVisible(true);
        lEnun.setVisible(true);

    }//GEN-LAST:event_rbOnMouseClicked

    private void rbOffMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbOffMouseClicked
        lAlarm.setVisible(false);
        lEnun.setVisible(false);
        OffAlarm();
    }//GEN-LAST:event_rbOffMouseClicked

    public void getAlarmDialogData(int hour, int min, String msg) {
        this.hour = hour;
        this.min = min;
        this.msg=msg;
    }

    public void formatLAlarm() throws ParseException {
        String sHora, sMin;
        String result = "";

        if (fTextLabel) {
            sHora = hour < 10 ? "0" + String.valueOf(hour) : String.valueOf(hour);
            sMin = min < 10 ? "0" + String.valueOf(min) : String.valueOf(min);
        } else {
            int auxHour = hour;
            if (hour >= 12) {
                auxHour = hour - 12;
            }
            sHora = auxHour < 10 ? "0" + String.valueOf(auxHour) : String.valueOf(auxHour);
            sMin = min < 10 ? "0" + String.valueOf(min) : String.valueOf(min);
        }
        result = sHora + ":" + sMin;
        alarmString = result;
        lAlarm.setText(result);
    }

    protected void OnAlarm() {
        tAlarm = new Thread(() -> {
            System.out.println("Alarma encendida");
            
            while (true) {
                //System.out.println("Sonar/actual: "+alarmString+"/"+timeString);
                if (alarmString.equals(timeString)) {
                    RingAlarmDialog ring = new RingAlarmDialog(this, true);
                    ring.setVisible(true);
                    try {
                        Thread.sleep(60000);
                    } catch (InterruptedException ex) {
                    }
                }
                try {
                    Thread.sleep(500);
                } catch (InterruptedException ex) {}
            }
        });
        tAlarm.start();

    }

    private void OffAlarm() {
        if (tAlarm.isAlive()) {
            tAlarm.interrupt();
        }
    }
public String getMsg(){
    return msg;
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClockFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClockFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClockFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClockFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ClockFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btSend;
    private javax.swing.ButtonGroup buttonGroup1;
    private back.ClockLabel cLabel;
    private back.ClockLabel clockLabel1;
    private javax.swing.JDialog dAlarm;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lAlarm;
    private javax.swing.JLabel lChangeFormat;
    private javax.swing.JLabel lEnun;
    private javax.swing.JPanel pClock;
    private javax.swing.JRadioButton rbOff;
    private javax.swing.JRadioButton rbOn;
    private javax.swing.JSpinner spHour;
    private javax.swing.JSpinner spMin;
    // End of variables declaration//GEN-END:variables
}
